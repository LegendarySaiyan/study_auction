# Generated by Django 4.0.5 on 2022-06-20 17:00

from django.db import migrations, models
import django.db.models.deletion
import django_fsm
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='UID')),
                ('statement_signed_at', models.DateTimeField(blank=True, help_text='Дата/Время подписания оферты', null=True, verbose_name='Принял оферту')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата/Время создания записи', verbose_name='Создан')),
                ('last_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Фамилия')),
                ('first_name', models.CharField(blank=True, max_length=64, null=True, verbose_name='Имя')),
                ('patronymic', models.CharField(blank=True, max_length=64, null=True, verbose_name='Отчество')),
                ('mail', models.EmailField(max_length=254)),
            ],
            options={
                'verbose_name': 'Профиль клиента',
                'verbose_name_plural': 'Профиль клиента',
            },
        ),
        migrations.CreateModel(
            name='CustomerLot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='UID')),
                ('state', django_fsm.FSMField(choices=[('waiting_for_trade', 'Ожидает начало торга'), ('trading_in_process', 'В процессе торга'), ('trading_is_finished', 'Торг завершен(Победитель не подтвержден)'), ('winner_of_trade_approved', 'Торг завершен(Победитель подтвержден)'), ('payment_in_process', 'Оплата в процессе'), ('payment_success', 'Оплата успешно завершена'), ('payment_failed', 'Оплата завершена с ошибкой')], default='waiting_for_trade', max_length=50, verbose_name='Состояние')),
                ('short_description', models.CharField(help_text='Краткое описание лота', max_length=256, verbose_name='Краткое описание')),
                ('description', models.TextField(blank=True, help_text='Полное описание лота', null=True, verbose_name='Описание')),
                ('start_price', models.DecimalField(decimal_places=2, help_text='В рублях', max_digits=14, verbose_name='Начальная стоимость')),
                ('final_price', models.DecimalField(blank=True, decimal_places=2, help_text='В рублях', max_digits=14, null=True, verbose_name='Финальная стоимость')),
                ('commission', models.DecimalField(blank=True, decimal_places=2, help_text='Наша комиссия за торг', max_digits=14, null=True, verbose_name='Коммиссия')),
                ('lot_image', models.ImageField(max_length=300, upload_to=None)),
                ('trade_started_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата/Время начала торга')),
                ('payment_started_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата/Время начала оплаты')),
                ('paid_at', models.DateTimeField(blank=True, help_text='Дата/Время оплаты', null=True, verbose_name='Оплачено')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата/Время создания', verbose_name='Добавлено')),
                ('all_participants_info', models.JSONField(default=dict, verbose_name='Все участники торгов')),
                ('owner_customer', models.ForeignKey(help_text='Владелец лота', on_delete=django.db.models.deletion.PROTECT, related_name='owner', to='act.customer')),
                ('trade_winner', models.ForeignKey(blank=True, help_text='Победитель торга', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='winner', to='act.customer')),
            ],
            options={
                'verbose_name': 'Лот клиента',
                'verbose_name_plural': 'Лот клиента',
            },
        ),
        migrations.CreateModel(
            name='VirtualAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('virtual_account_id', models.UUIDField(unique=True, verbose_name='ID виртуального счета')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата/Время создания записи', verbose_name='Создан')),
                ('customer_profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='virtual_account', to='act.customer')),
            ],
            options={
                'verbose_name': 'Виртуальный счет',
                'verbose_name_plural': 'Виртуальный счет',
            },
        ),
        migrations.CreateModel(
            name='CustomerLotPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', django_fsm.FSMField(choices=[('started', 'Запущена'), ('insufficient_funds_on_virtual_account', 'Недостаточно средств на счёте'), ('rejected', 'Оплата отклонена'), ('paid', 'Оплата успешно завершена')], default='started', max_length=50, verbose_name='Состояние')),
                ('uid', models.UUIDField(default=uuid.uuid4, unique=True, verbose_name='UID')),
                ('paid_at', models.DateTimeField(blank=True, help_text='Дата/Время оплаты', null=True, verbose_name='Оплачено')),
                ('rejected_at', models.DateTimeField(blank=True, help_text='Дата/Время отказа', null=True, verbose_name='Отказано')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата/Время запуска процесса оплаты', verbose_name='Процесс оплаты запущен')),
                ('finished', models.BooleanField(default=False, help_text='Если процесс завершен, то работа с ним не требуется.\nВне зависимости от того, на какой стадии он остановился', verbose_name='Завершен')),
                ('rejected_detail', models.TextField(blank=True, help_text='Человекочитаемая ошибка платежа (для отображения клиенту)', null=True, verbose_name='Причина отказа в проведении платежа')),
                ('CustomerLot', models.ForeignKey(help_text='Оплачиваемый лот', on_delete=django.db.models.deletion.CASCADE, related_name='payments', related_query_name='payment', to='act.customerlot')),
            ],
            options={
                'verbose_name': 'Оплата лота',
                'verbose_name_plural': 'Оплата лотов',
            },
        ),
    ]
